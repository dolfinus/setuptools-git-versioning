name: Tests

on: push

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['2.7', '3.3', '3.4', '3.5', '3.6', '3.7', '3.8', '3.9']

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}
            ${{ runner.os }}-python-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-python
            ${{ runner.os }}-

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run:  pip install -I "flake8<=2.6" -r requirements.txt
        if: matrix.python-version == '3.3' || matrix.python-version == '3.4'

      - name: Install dependencies
        run:  pip install "flake8>=3.8" -r requirements.txt
        if: matrix.python-version != '3.3' && matrix.python-version != '3.4'

      - name: Run flake8
        run:  flake8 --count --ignore=F401 --max-line-length=120 .
        if: matrix.python-version == '3.3' || matrix.python-version == '3.4'

      - name: Run flake8
        run:  flake8 --count --max-line-length=120 .
        if: matrix.python-version != '3.3' && matrix.python-version != '3.4'

      - name: Build package
        run:  python setup.py bdist_wheel sdist

      - name: Push build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/*
