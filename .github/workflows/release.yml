name: Releases

on:
  push:
    tags:
      - .*

jobs:

  prod:
    name: Release version
    runs-on: ubuntu-latest

    steps:
      - name: Wait for tests
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-tests
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: Run tests
          ref: ${{ github.ref }}
          timeoutSeconds: 3600

      - name: Fail the Build
        uses: cutenode/action-always-fail@v1
        if: steps.wait-for-tests.outputs.conclusion != 'success'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}
            ${{ runner.os }}-python-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-python
            ${{ runner.os }}-

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel twine

      - name: Download artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: test.yml
          workflow_conclusion: success
          name: dist
          path: ./dist/

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          TWINE_REPOSITORY_URL: dolfinus/setuptools-git-versioning
        run: |
          twine upload dist/*